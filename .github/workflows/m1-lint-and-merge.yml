name: M1 - CI/CD Pipeline

on:
  push:
    branches:
      - '2022AA05005'
    paths:
      - 'M3/m3.py'

jobs:
  validate_code_linting:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      issues: write

    steps:
      - name: Print branch
        run: |
          echo "Branch: ${{ github.ref_name }}"
      
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint M3/m3.py
        run: |
          flake8 M3/m3.py | tee lint-output.txt
          cat lint-output.txt

      - name: Check Lint Output
        id: check_lint
        run: |
          if [ -s lint-output.txt ]; then
            echo "lint_issues=true" >> $GITHUB_ENV
          else
            echo "lint_issues=false" >> $GITHUB_ENV
          fi

      - name: Create issue if lint fails
        if: env.lint_issues == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const { owner, repo } = context.repo;
            const lintOutput = fs.readFileSync('lint-output.txt', 'utf8');
            await github.rest.issues.create({
              owner: owner,
              repo: repo,
              title: 'Linting failed on M3/m3.py',
              body: `Linting failed for M3/m3.py in push to branch ${{ github.ref_name }}.\n\nDetails:\n\`\`\`\n${lintOutput}\n\`\`\``
            });

  validate_unit_test_cases:
    runs-on: ubuntu-latest
    needs: validate_code_linting

    if: needs.validate_code_linting.outputs.lint_issues == 'false'

    steps:
      - name: Print Hello World
        run: |
          echo "Hello World from Unit Test Validation!"

  build_and_deploy_application:
    runs-on: ubuntu-latest
    needs: validate_unit_test_cases

    if: success()

    steps:
      - name: Print Hello World
        run: |
          echo "Hello World from Build and Deploy!"
